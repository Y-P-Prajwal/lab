#include<GL/glu.h>
#include<GL/glut.h>

GLfloat t=0;

void spin()
{
    t+=1;
    if(t>360)
        t=0;
    glutPostRedisplay();
}

void Draw()
{
    GLfloat D[]= {1,0,0,1};
    GLfloat DP[]= {1,1,0,1};
    GLfloat P[]= {-1,1,0,0};
    glClearColor(1,1,1,1);
    glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);

    glLoadIdentity();
    glLightfv(GL_LIGHT0,GL_DIFFUSE,D);
    glLightfv(GL_LIGHT0,GL_POSITION,P);
    gluLookAt(0,1,3,0,0,0,0,1,0);
    glRotatef(t,0,1,0);
    //amibient,specular
    //glColor3f(1,0,0);

    glPushMatrix();
    glScalef(1,0.2,1);
    glTranslatef(0,1.2,0);
    glutSolidCube(1);
    glPopMatrix();

    glPushMatrix();
    glLightfv(GL_LIGHT0,GL_DIFFUSE,DP);
    glTranslatef(0,0.48,0);
    glutSolidTeapot(0.2);
    glPopMatrix();

    glPushMatrix();
    glScalef(0.1,1,0.1);
    glTranslatef(-4.3,-.25,-4.3);
    glutSolidCube(1);
    glPopMatrix();

    glPushMatrix();
    glScalef(0.1,1,0.1);
    glTranslatef(4.3,-.25,4.3);
    glutSolidCube(1);
    glPopMatrix();

    glPushMatrix();
    glScalef(0.1,1,0.1);
    glTranslatef(4.3,-.25,-4.3);
    glutSolidCube(1);
    glPopMatrix();

    glPushMatrix();
    glScalef(0.1,1,0.1);
    glTranslatef(-4.3,-.25,4.3);
    glutSolidCube(1);
    glPopMatrix();




    glutSwapBuffers();
}

int main(int c, char **v)
{

    glutInit(&c,v);
    glutInitWindowPosition(100,50);
    glutInitWindowSize(400,400);
    glutInitDisplayMode(GLUT_RGB | GLUT_DOUBLE | GLUT_DEPTH);


    glutCreateWindow("Prajwal Y P");
    glutDisplayFunc(Draw);
    glEnable(GL_DEPTH_TEST);
    glutIdleFunc(spin);

    //PERSPECTIVE LOOKS BRO
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glFrustum(-1,1,-1,1,2,10);
    glMatrixMode(GL_MODELVIEW);

    glEnable(GL_LIGHTING);
    glEnable(GL_LIGHT0);

    glutMainLoop();
    return 0;
}
